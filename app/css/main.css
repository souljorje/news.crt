html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
details,
section,
summary,
aside,
main,
menu,
nav,
figcaption,
figure,
footer,
header,
hgroup {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
b,
strong {
  font-weight: 'Ubuntu-Bold';
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type='button'],
input[type='reset'],
input[type='submit'] {
  cursor: pointer;
  -webkit-appearance: button;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type='checkbox'],
input[type='radio'] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  height: auto;
}
input[type='search'] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: 'Ubuntu-Bold';
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
figure {
  margin: 0;
}
a,
button {
  outline: none;
}
.container:after {
  content: none;
}
ul {
  padding-left: 0;
  margin: 0;
}
body {
  background-color: #f9f9fa;
  font-size: 16px;
}
h1 {
  font-size: 2.25em;
  font-family: 'Ubuntu-Regular';
  margin-top: 0;
  margin-bottom: 0;
}
h2 {
  font-size: 1.875em;
  font-family: 'Ubuntu-Regular';
}
svg {
  fill: none;
}
.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
a:hover,
a:focus {
  text-decoration: none;
}
.navbar {
  margin-bottom: 0;
}
.navbar-brand {
  display: none;
}
.navbar-collapse {
  margin-left: -15px;
  margin-right: -15px;
}
.header {
  background-color: #fff;
  overflow: hidden;
}
.header__block {
  width: 100%;
}
.header__block:first-child,
.header__block:nth-child(2) {
  border-bottom: 1px solid #edeef0;
}
.header-nav {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.header-nav__nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  width: 28.97%;
  list-style-type: none;
}
.header-nav__link {
  font-size: 0.875em;
  font-family: 'Ubuntu-Regular';
  color: #a8aab4;
}
.header-nav__link:hover,
.header-nav__link:focus {
  color: #262053;
}
.map {
  padding: 20px 0;
  margin-left: -5.5%;
  position: relative;
  -webkit-transition: 0.5s ease all;
  transition: 0.5s ease all;
  cursor: pointer;
}
.map__link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.map__icon {
  height: 20px;
}
.map__icon svg {
  height: 20px;
  stroke: #262053;
}
.map__text {
  font-size: 0.875em;
  font-family: 'Ubuntu-Medium';
  margin: 0 8px 0 15px;
  letter-spacing: 0.4px;
  color: #262053;
}
.map:after {
  content: '';
  position: absolute;
  bottom: -8px;
  z-index: 2;
  left: -10px;
  right: 0;
  width: 300px;
  height: 8px;
  border-top: solid 1px #0afcba;
}
.map:hover:after {
  background-image: url("../../images/icons/triangle.png");
  background-repeat: no-repeat;
  background-position: center;
}
.header-nav__social {
  width: 23.8%;
}
.social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  list-style-type: none;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.social__icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.social__icon svg {
  fill: #a8aab4;
}
.social__icon.social__icon_vk svg {
  height: 11px;
}
.social__icon.social__icon_vk svg:hover {
  fill: #45668e;
}
.social__icon.social__icon_google svg {
  height: 14px;
}
.social__icon.social__icon_google svg:hover {
  fill: #dd4b39;
}
.social__icon.social__icon_youtube svg {
  height: 12px;
}
.social__icon.social__icon_youtube svg:hover {
  fill: #b00;
}
.social__icon.social__icon_instagram svg {
  height: 16px;
}
.social__icon.social__icon_instagram svg .gradient {
  display: none;
}
.social__icon.social__icon_instagram svg:hover .gradient {
  display: block;
}
.social__icon.social__icon_fb svg {
  height: 16px;
}
.social__icon.social__icon_fb svg:hover {
  fill: #3b5998;
}
.social__icon.social__icon_ok svg {
  height: 17px;
}
.social__icon.social__icon_ok svg:hover {
  fill: #ff8400;
}
.social__icon.social__icon_twitter svg {
  height: 13px;
}
.social__icon.social__icon_twitter svg:hover {
  fill: #00aced;
}
.social__icon.social__icon_test svg {
  height: 16px;
}
.header-logo {
  padding: 32px 0 27px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.help {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 200px;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
}
.help__link {
  text-align: center;
  color: #000;
}
.help__link:hover,
.help__link:focus {
  color: #262053;
}
.help__link:hover .help__icon svg,
.help__link:focus .help__icon svg {
  stroke: #262053;
}
.help__icon svg {
  stroke: #000;
}
.help__icon.help__icon_search svg {
  height: 30px;
}
.help__icon.help__icon_eye svg {
  height: 34px;
}
.help__icon.help__icon_signup svg {
  height: 34px;
}
.help__icon.help__icon_signin svg {
  height: 34px;
}
.help__text {
  font-size: 0.75em;
  font-family: 'Ubuntu-Bold';
  text-transform: uppercase;
}
.help figcaption {
  text-transform: uppercase;
  margin-top: 12px;
}
.header-logo__brand svg {
  fill: #262053;
  height: 69px;
}
.header-menu {
  padding: 20px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
          justify-content: center;
  position: relative;
}
.header-menu__menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  list-style-type: none;
  width: 100%;
  max-width: 770px;
}
.header-menu__link {
  font-size: 1em;
  font-family: 'Ubuntu-Bold';
  letter-spacing: 0.4px;
  text-transform: uppercase;
  color: #000;
}
.header-menu__link:hover,
.header-menu__link:focus {
  color: #262053;
}
.header-mobile {
  display: none;
}
.page {
  padding-top: 25px;
  padding-bottom: 61px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
}
.page__breadcrumbs {
  width: 100%;
  margin-bottom: 18px;
  text-align: center;
}
.page__breadcrumbs-item {
  font-size: 0.875em;
  font-family: 'Ubuntu-Medium';
  color: #a8aab4;
}
.page__breadcrumbs-item:first-child:after {
  content: '';
  display: inline-block;
  vertical-align: middle;
  width: 3px;
  height: 3px;
  margin: 0 12px;
  background-color: #a8aab4;
}
.page__breadcrumbs-item:hover,
.page__breadcrumbs-item:focus {
  color: #262053;
}
.main {
  width: 74.6%;
  min-width: 290px;
}
.main__heading {
  font-size: 2.25em;
  font-family: 'Ubuntu-Medium';
  margin-top: 0;
  margin-bottom: 38px;
  line-height: 0.7;
}
.tags {
  margin-bottom: 38px;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.tags__item {
  margin-right: 10px;
}
.tags__link {
  font-size: 0.75em;
  font-family: 'Ubuntu-Medium';
  text-transform: uppercase;
  letter-spacing: 0.2px;
  color: #a8aab4;
  padding: 4px 12px;
  border: 1px solid #a8aab4;
  border-radius: 15px;
}
.tags__link:hover,
.tags__link:focus {
  color: #fff;
  background-color: #6103fc;
  border-color: #6103fc;
}
.tags__link.tags__link_last {
  font-size: 0.8125em;
  font-family: 'Ubuntu-Bold';
  border: none;
  padding-left: 9px;
}
.tags__link.tags__link_last:hover,
.tags__link.tags__link_last:focus {
  background-color: transparent;
  color: #262053;
}
.main__body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
}
.main-item {
  position: relative;
  max-width: 300px;
  height: 400px;
  background-color: #fff;
  margin-bottom: 20px;
}
.main-item__img {
  position: relative;
  min-height: 59px;
}
.main-item__img img {
  max-width: 100%;
}
.main-item__text {
  margin-top: 14px;
  font-size: 1.125em;
  font-family: 'Ubuntu-Medium';
  color: #000;
}
.main-item:hover .main-item__text {
  color: #262053;
}
.main-item figcaption {
  position: absolute;
  top: 21px;
  left: 19px;
  font-size: 0.75em;
  font-family: 'Ubuntu-Medium';
  color: #fff;
  text-transform: uppercase;
  padding: 2px 12px;
  border-radius: 15px;
}
.main-item#art figcaption {
  background-color: #ba5fc1;
}
.main-item#fasion figcaption {
  background-color: #542e57;
}
.main-item#education figcaption {
  background-color: #5c9715;
}
.main-item#enjoy figcaption {
  background-color: #ff7725;
}
.main-item#sport figcaption {
  background-color: #6103fc;
}
.main-item:hover {
  -webkit-box-shadow: 0 10px 40px rgba(50,65,83,0.3);
  box-shadow: 0 10px 40px rgba(50,65,83,0.3);
}
.main-item__overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  bottom: 0;
  background-color: rgba(0,0,0,0.4);
  display: none;
}
.main-item:hover .main-item__overlay {
  display: block;
}
.main-item.main-item__overlay_no-img {
  background-color: transparent;
}
.discuss {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: start;
  -webkit-box-pack: start;
          justify-content: flex-start;
}
.main-item_no-img .discuss.discuss_main {
  top: auto;
  bottom: 0;
}
.main-item_no-img .discuss.discuss_main .discuss__item {
  border-color: #edeef0;
  color: #a8aab4;
}
.main-item_no-img .discuss.discuss_main .discuss__item svg {
  fill: #a8aab4;
}
.discuss__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
          justify-content: center;
  margin-right: 18px;
  font-size: 0.75em;
  font-family: 'Ubuntu-Medium';
  letter-spacing: 0.2px;
  color: #a8aab4;
}
.discuss__item svg {
  fill: #a8aab4;
  margin-right: 5px;
}
.discuss__item_like svg,
.discuss__item_dislike svg {
  height: 13px;
}
.discuss__item_view svg {
  height: 9px;
}
.discuss__item_comment svg {
  height: 12px;
}
.discuss.discuss_main {
  position: absolute;
  top: 141px;
  width: 100%;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  display: none;
}
.main-item:hover .discuss {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.discuss.discuss_main .discuss__item {
  margin-right: 0;
  width: 25%;
  -ms-flex-direction: column;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  height: 59px;
  color: #fff;
  border: 1px solid rgba(255,255,255,0.15);
}
.discuss.discuss_main .discuss__item svg {
  fill: #fff;
  margin-right: 0;
}
.main__content {
  padding: 21px 24px;
}
.date {
  font-size: 0.75em;
  font-family: 'Ubuntu-Medium';
  color: #a8aab4;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.date svg {
  height: 14px;
  fill: #a8aab4;
  margin: 0 8px;
}
.main__button {
  width: 100%;
  background-color: #262053;
  font-size: 0.8125em;
  font-family: 'Ubuntu-Bold';
  color: #fff;
  text-transform: uppercase;
  border: none;
  height: 81px;
}
.main__button:hover {
  background-color: #1d1844;
}
.sidebar {
  width: 300px;
  overflow: hidden;
}
.sidebar__heading {
  display: block;
  padding-top: 38px;
  margin-bottom: 38px;
  margin: 0;
}
.sidebar__block {
  padding: 0 23px;
  background-color: #fff;
  margin-bottom: 20px;
}
.period {
  position: relative;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  padding-top: 38px;
  padding-bottom: 14px;
}
.period__link {
  color: #000;
  z-index: 2;
  position: relative;
}
.period__link:hover,
.period__link:focus {
  color: #000;
}
.period__link:hover:after,
.period__link:focus:after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: -17px;
  width: 100%;
  height: 2px;
  background-color: #0afcba;
}
.number {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  width: 22px;
  height: 22px;
  background-color: #ff7725;
  border-radius: 100%;
  font-size: 0.875em;
  font-family: 'Ubuntu-Bold';
  color: #fff;
}
.sidebar__item {
  margin-top: 41px;
  margin-bottom: 41px;
}
.sidebar__text {
  margin-top: 10px;
  margin-bottom: 19px;
  font-size: 1em;
  font-family: 'Ubuntu-Medium';
}
.sidebar__link {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  position: relative;
  padding: 24px 0;
  font-size: 0.8125em;
  font-family: 'Ubuntu-Bold';
  color: #a8aab4;
  text-transform: uppercase;
}
.sidebar__link:after {
  content: '+';
  font-size: 1.5em;
  margin-left: 11px;
}
.sidebar__link:hover,
.sidebar__link:focus {
  color: #262053;
}
.sidebar__link:before {
  top: 0;
}
.sidebar__button {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  background-color: #ff7725;
  border: none;
  height: 60px;
  font-size: 0.815em;
  font-family: 'Ubuntu-Bold';
  text-transform: uppercase;
  letter-spacing: 0.6px;
  color: #fff;
  margin: 20px 0;
}
.sidebar__button:hover {
  background-color: #ff4e25;
}
.sidebar__button svg {
  height: 37px;
  fill: #fff;
  margin: 0 16px;
}
.sidebar__banner {
  padding: 0;
}
.footer {
  background-color: #080810;
  overflow: hidden;
  width: 100%;
}
.footer__menu {
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
          justify-content: space-between;
  margin: auto;
  margin-top: 40px;
  max-width: 625px;
}
.footer__link {
  font-size: 0.75em;
  font-family: 'Ubuntu-Bold';
  color: #fff;
  text-transform: uppercase;
  position: relative;
  padding-bottom: 5px;
}
.footer__link:hover,
.footer__link:focus {
  color: #fff;
  border-bottom: 2px solid #0afcba;
}
.footer__social {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  padding-bottom: 26px;
}
.footer__logo {
  margin: 75px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
          justify-content: center;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
}
.footer__logo svg {
  height: 60px;
  fill: #fff;
}
.footer__logo:before,
.footer__logo:after {
  content: '';
  height: 1px;
  width: 100%;
  background-color: rgba(51,51,61,0.45);
  border: solid #080810;
  border-width: 0 31px;
}
.footer__logo:before {
  margin-left: -100%;
}
.footer__logo:after {
  margin-right: -100%;
}
.footer__map {
  position: absolute;
  left: 0;
  display: inline-block;
  -webkit-transition: 0.5s ease all;
  transition: 0.5s ease all;
  cursor: pointer;
}
.footer__map figure {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.footer__map svg {
  height: 20px;
  stroke: #fff;
}
.footer__map:hover svg {
  stroke: #0afcba;
}
.footer__map figcaption {
  font-size: 0.875em;
  font-family: 'Ubuntu-Medium';
  margin: 0 8px 0 15px;
  letter-spacing: 0.4px;
  color: #fff;
}
.footer__map:hover figcaption {
  color: #0afcba;
}
.social_footer {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin: auto;
  width: 318px;
}
.social_footer svg {
  fill: #fff;
}
.footer__terms {
  padding: 26px 0;
  position: relative;
}
.footer__terms p {
  font-size: 0.75em;
  font-family: 'Ubuntu-Regular';
  text-align: center;
  margin: 0;
}
.footer__terms:before {
  content: '';
  height: 1px;
  width: 9999px;
  background-color: rgba(51,51,61,0.45);
  position: absolute;
  top: 0;
  left: -1000px;
}
.footer__anchor-up {
  position: absolute;
  right: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  -webkit-box-align: center;
          align-items: center;
  font-size: 0.75em;
  font-family: 'Ubuntu-Bold';
  color: #fff;
  text-transform: uppercase;
}
.footer__anchor-up svg {
  height: 9px;
  fill: #fff;
  margin-left: 11px;
}
.footer__anchor-up:hover,
.footer__anchor-up:focus {
  color: #0afcba;
}
.footer__anchor-up:hover svg,
.footer__anchor-up:focus svg {
  fill: #0afcba;
}
@media only screen and (min-width: 768px) {
  .container {
    width: 750px;
  }
}
@media only screen and (min-width: 992px) {
  .container {
    width: 970px;
  }
}
@media only screen and (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}
@media only screen and (min-width: 1281px) {
  .container {
    width: 1290px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
